#define check_is_bot(VALUE, TYPE_SCALAR)                                                                        \
    if (value != Py_ ## VALUE)                                                                                  \
    {                                                                                                           \
        PyErr_Format(PyExc_ValueError, "Member `is_bot` of %s must be" #VALUE, ((TYPE_SCALAR).tp_name));        \
        return converter_failed;                                                                                \
    }                                                                                                           \
    return converter_success;

abstract class User [User_Type, User_Object] {
    ~ is_bot : PyBool_Type
        get {
            if (Py_TYPE(self) == &BotUser_Type)
                Py_RETURN_TRUE;
            else if (Py_TYPE(self) == &RealUser_Type)
                Py_RETURN_FALSE;
            else {
                PyErr_Format(
                    PyExc_TypeError,
                    "To check that user bot or not, self must be `%s` or `%s` or it subclasses",
                    BotUser_Type.tp_name,
                    RealUser_Type.tp_name
                );
                return NULL;
            }
        }

    @ id : PyLong_Type

    @ first_name : PyUnicode_Type

    @ username : PyUnicode_Type?
}

class RealUser [RealUser_Type, RealUser_Object] <- User {
    ~ is_bot [common.bot] : PyBool_Type
        check {
            check_is_bot(False, RealUser_Type);
        }
        get {
            Py_RETURN_FALSE;
        }

    @ last_name : PyUnicode_Type?
    @ language_code : PyUnicode_Type?
}

class BotUser [BotUser_Type, BotUser_Object] <- User {
    ~ is_bot [common.bot] : PyBool_Type
        check {
            check_is_bot(True, BotUser_Type);
        }
        get {
            Py_RETURN_TRUE;
        }

    @ username [common.username] : PyUnicode_Type
}

class BotSelfUser [BotSelfUser_Type, BotSelfUser_Object] <- BotUser {
    @ can_join_groups : PyBool_Type
    @ can_read_all_group_messages : PyBool_Type
    @ supports_inline_queries : PyBool_Type
}